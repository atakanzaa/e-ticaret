version: '3.8'

services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_DB: eticaret
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init.sql:/docker-entrypoint-initdb.d/init.sql

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  # Auth Service
  auth:
    build: ../auth-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/eticaret?currentSchema=auth
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123456
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      - postgres
      - rabbitmq
      - kafka

  # Order Payment Service
  order-payment:
    build: ../order-payment-service
    ports:
      - "8086:8086"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/eticaret?currentSchema=order_payment
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123456
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: admin
      # iyzico sandbox credentials
      IYZICO_API_BASE: https://sandbox-api.iyzipay.com
      IYZICO_API_KEY: sandbox-Krg04h0IF0kWcTi9RlzB87ILNPfCc5iW
      IYZICO_SECRET_KEY: sandbox-lBrmq0iCUw9DrPju07tXNHkNjOJ5ehvq
      IYZICO_CALLBACK_URL: http://localhost:8086/api/payment/webhook/iyzico
      IYZICO_CURRENCY: TRY
      IYZICO_LOCALE: tr
      # Kafka Topics
      KAFKA_TOPICS_ORDER_CREATED: order_created
      KAFKA_TOPICS_PAYMENT_SUCCEEDED: payment_succeeded
    depends_on:
      - postgres
      - kafka
      - rabbitmq

  # Catalog Service
  catalog:
    build: ../catalog-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/eticaret?currentSchema=catalog
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123456
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_RABBITMQ_HOST: rabbitmq
    depends_on:
      - postgres
      - kafka
      - rabbitmq

  # Seller Service
  seller:
    build: ../seller-service
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/eticaret?currentSchema=seller
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123456
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: admin
      CATALOG_SERVICE_URL: http://catalog:8082
    depends_on:
      - postgres
      - kafka
      - rabbitmq
      - catalog

  # Gateway Service
  gateway:
    build: ../gateway-service
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      AUTH_SERVICE_URL: http://auth:8081
      CATALOG_SERVICE_URL: http://catalog:8082
      SELLER_SERVICE_URL: http://seller:8083
      ORDER_PAYMENT_SERVICE_URL: http://order-payment:8086
      JWT_JWK_SET_URI: http://auth:8081/.well-known/jwks.json
    depends_on:
      - auth
      - catalog
      - seller
      - order-payment

volumes:
  postgres_data: