spring:
  application:
    name: gateway-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:default}
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${JWT_JWK_SET_URI:http://auth:8081/.well-known/jwks.json}
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
      routes:
        # Auth Service Routes
        - id: auth-service
          uri: ${AUTH_SERVICE_URL:http://auth:8081}
          predicates:
            - Path=/api/auth/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/api/auth/(?<segment>.*), /$\{segment}
        
        # Catalog Service Routes
        - id: catalog-service
          uri: ${CATALOG_SERVICE_URL:http://catalog:8082}
          predicates:
            - Path=/api/catalog/**
          filters:
            - RewritePath=/api/catalog/(?<segment>.*), /$\{segment}
            
        # Order Payment Service Routes
        - id: order-payment-service
          uri: ${ORDER_PAYMENT_SERVICE_URL:http://order-payment:8086}
          predicates:
            - Path=/api/order/**,/api/orders/**,/api/payment/**
          filters:
            - RewritePath=/api/order/(?<segment>.*), /$\{segment}
            - RewritePath=/api/orders/(?<segment>.*), /$\{segment}
            - RewritePath=/api/payment/(?<segment>.*), /$\{segment}
            
        # Seller Service Routes
        - id: seller-service
          uri: ${SELLER_SERVICE_URL:http://seller:8083}
          predicates:
            - Path=/api/seller/**,/api/sellers/**
          filters:
            - RewritePath=/api/seller/(?<segment>.*), /$\{segment}
            - RewritePath=/api/sellers/(?<segment>.*), /$\{segment}
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowCredentials: true
            maxAge: 3600
      discovery:
        locator:
          enabled: false

server:
  port: ${SERVER_PORT:8080}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

logging:
  level:
    root: ${LOGGING_LEVEL_ROOT:INFO}
    "[org.springframework.cloud.gateway]": ${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CLOUD_GATEWAY:INFO}